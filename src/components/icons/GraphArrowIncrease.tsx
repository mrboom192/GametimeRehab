import React from "react";
import { Svg, Path, SvgProps } from "react-native-svg";

export default function GraphArrowIncrease(
  props: React.JSX.IntrinsicAttributes &
    React.JSX.IntrinsicClassAttributes<Svg> &
    Pick<
      Readonly<SvgProps>,
      | "pointerEvents"
      | "hitSlop"
      | "children"
      | "id"
      | "needsOffscreenAlphaCompositing"
      | "onLayout"
      | "removeClippedSubviews"
      | "style"
      | "testID"
      | "nativeID"
      | "className"
      | "cssInterop"
      | "collapsable"
      | "collapsableChildren"
      | "renderToHardwareTextureAndroid"
      | "focusable"
      | "tabIndex"
      | "shouldRasterizeIOS"
      | "isTVSelectable"
      | "hasTVPreferredFocus"
      | "tvParallaxShiftDistanceX"
      | "tvParallaxShiftDistanceY"
      | "tvParallaxTiltAngle"
      | "tvParallaxMagnification"
      | "onStartShouldSetResponder"
      | "onMoveShouldSetResponder"
      | "onResponderEnd"
      | "onResponderGrant"
      | "onResponderReject"
      | "onResponderMove"
      | "onResponderRelease"
      | "onResponderStart"
      | "onResponderTerminationRequest"
      | "onResponderTerminate"
      | "onStartShouldSetResponderCapture"
      | "onMoveShouldSetResponderCapture"
      | "onTouchStart"
      | "onTouchMove"
      | "onTouchEnd"
      | "onTouchCancel"
      | "onTouchEndCapture"
      | "onPointerEnter"
      | "onPointerEnterCapture"
      | "onPointerLeave"
      | "onPointerLeaveCapture"
      | "onPointerMove"
      | "onPointerMoveCapture"
      | "onPointerCancel"
      | "onPointerCancelCapture"
      | "onPointerDown"
      | "onPointerDownCapture"
      | "onPointerUp"
      | "onPointerUpCapture"
      | "accessible"
      | "accessibilityActions"
      | "accessibilityLabel"
      | "aria-label"
      | "accessibilityRole"
      | "accessibilityState"
      | "aria-busy"
      | "aria-checked"
      | "aria-disabled"
      | "aria-expanded"
      | "aria-selected"
      | "accessibilityHint"
      | "accessibilityValue"
      | "aria-valuemax"
      | "aria-valuemin"
      | "aria-valuenow"
      | "aria-valuetext"
      | "onAccessibilityAction"
      | "importantForAccessibility"
      | "aria-hidden"
      | "aria-modal"
      | "role"
      | "accessibilityLabelledBy"
      | "aria-labelledby"
      | "accessibilityLiveRegion"
      | "aria-live"
      | "accessibilityElementsHidden"
      | "accessibilityViewIsModal"
      | "onAccessibilityEscape"
      | "onAccessibilityTap"
      | "onMagicTap"
      | "accessibilityIgnoresInvertColors"
      | "accessibilityLanguage"
      | "accessibilityShowsLargeContentViewer"
      | "accessibilityLargeContentTitle"
      | "width"
      | "height"
      | "viewBox"
      | "color"
      | "title"
      | "opacity"
      | "fill"
      | "fillOpacity"
      | "fillRule"
      | "stroke"
      | "strokeWidth"
      | "strokeOpacity"
      | "strokeDasharray"
      | "strokeDashoffset"
      | "strokeLinecap"
      | "strokeLinejoin"
      | "strokeMiterlimit"
      | "vectorEffect"
      | "clipRule"
      | "clipPath"
      | "translate"
      | "translateX"
      | "translateY"
      | "origin"
      | "originX"
      | "originY"
      | "scale"
      | "scaleX"
      | "scaleY"
      | "skew"
      | "skewX"
      | "skewY"
      | "rotation"
      | "x"
      | "y"
      | "transform"
      | "disabled"
      | "onPress"
      | "onPressIn"
      | "onPressOut"
      | "onLongPress"
      | "delayPressIn"
      | "delayPressOut"
      | "delayLongPress"
      | "marker"
      | "markerStart"
      | "markerMid"
      | "markerEnd"
      | "mask"
      | "filter"
      | "font"
      | "fontStyle"
      | "fontVariant"
      | "fontWeight"
      | "fontStretch"
      | "fontSize"
      | "fontFamily"
      | "textAnchor"
      | "textDecoration"
      | "letterSpacing"
      | "wordSpacing"
      | "kerning"
      | "fontFeatureSettings"
      | "fontVariantLigatures"
      | "fontVariationSettings"
    > & { readonly preserveAspectRatio?: string | undefined } & {}
) {
  return (
    <Svg width="14" height="14" viewBox="0 0 14 14" {...props}>
      <Path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M1.89754 10.7777C1.50701 11.1682 0.873847 11.1682 0.483323 10.7777C0.0927986 10.3871 0.0927986 9.754 0.483323 9.36348L3.81578 6.03103L3.82288 6.02399C4.09515 5.75712 4.46119 5.60764 4.84243 5.60764C5.22368 5.60764 5.58972 5.75712 5.86198 6.02399L5.86909 6.03103L7.57026 7.7322L9.91696 5.24975L8.87711 4.2099C8.66261 3.9954 8.59845 3.67281 8.71453 3.39256C8.83062 3.1123 9.10409 2.92957 9.40744 2.92957H13.0594C13.4736 2.92957 13.8094 3.26536 13.8094 3.67957V7.33157C13.8094 7.63492 13.6267 7.9084 13.3464 8.02448C13.0662 8.14057 12.7436 8.0764 12.5291 7.8619L11.3317 6.66452L8.62768 9.52499C8.61896 9.53422 8.61006 9.54329 8.60099 9.55218C8.32873 9.81905 7.96268 9.96853 7.58144 9.96853C7.20019 9.96853 6.83415 9.81905 6.56189 9.55218L6.55478 9.54514L4.84243 7.8328L1.89754 10.7777Z"
        fill="#2C2C2C"
      />
    </Svg>
  );
}
