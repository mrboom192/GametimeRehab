import React from "react";
import { Svg, Path, SvgProps } from "react-native-svg";

export default function Weight(
  props: React.JSX.IntrinsicAttributes &
    React.JSX.IntrinsicClassAttributes<Svg> &
    Pick<
      Readonly<SvgProps>,
      | "pointerEvents"
      | "hitSlop"
      | "children"
      | "id"
      | "needsOffscreenAlphaCompositing"
      | "onLayout"
      | "removeClippedSubviews"
      | "style"
      | "testID"
      | "nativeID"
      | "className"
      | "cssInterop"
      | "collapsable"
      | "collapsableChildren"
      | "renderToHardwareTextureAndroid"
      | "focusable"
      | "tabIndex"
      | "shouldRasterizeIOS"
      | "isTVSelectable"
      | "hasTVPreferredFocus"
      | "tvParallaxShiftDistanceX"
      | "tvParallaxShiftDistanceY"
      | "tvParallaxTiltAngle"
      | "tvParallaxMagnification"
      | "onStartShouldSetResponder"
      | "onMoveShouldSetResponder"
      | "onResponderEnd"
      | "onResponderGrant"
      | "onResponderReject"
      | "onResponderMove"
      | "onResponderRelease"
      | "onResponderStart"
      | "onResponderTerminationRequest"
      | "onResponderTerminate"
      | "onStartShouldSetResponderCapture"
      | "onMoveShouldSetResponderCapture"
      | "onTouchStart"
      | "onTouchMove"
      | "onTouchEnd"
      | "onTouchCancel"
      | "onTouchEndCapture"
      | "onPointerEnter"
      | "onPointerEnterCapture"
      | "onPointerLeave"
      | "onPointerLeaveCapture"
      | "onPointerMove"
      | "onPointerMoveCapture"
      | "onPointerCancel"
      | "onPointerCancelCapture"
      | "onPointerDown"
      | "onPointerDownCapture"
      | "onPointerUp"
      | "onPointerUpCapture"
      | "accessible"
      | "accessibilityActions"
      | "accessibilityLabel"
      | "aria-label"
      | "accessibilityRole"
      | "accessibilityState"
      | "aria-busy"
      | "aria-checked"
      | "aria-disabled"
      | "aria-expanded"
      | "aria-selected"
      | "accessibilityHint"
      | "accessibilityValue"
      | "aria-valuemax"
      | "aria-valuemin"
      | "aria-valuenow"
      | "aria-valuetext"
      | "onAccessibilityAction"
      | "importantForAccessibility"
      | "aria-hidden"
      | "aria-modal"
      | "role"
      | "accessibilityLabelledBy"
      | "aria-labelledby"
      | "accessibilityLiveRegion"
      | "aria-live"
      | "accessibilityElementsHidden"
      | "accessibilityViewIsModal"
      | "onAccessibilityEscape"
      | "onAccessibilityTap"
      | "onMagicTap"
      | "accessibilityIgnoresInvertColors"
      | "accessibilityLanguage"
      | "accessibilityShowsLargeContentViewer"
      | "accessibilityLargeContentTitle"
      | "width"
      | "height"
      | "viewBox"
      | "color"
      | "title"
      | "opacity"
      | "fill"
      | "fillOpacity"
      | "fillRule"
      | "stroke"
      | "strokeWidth"
      | "strokeOpacity"
      | "strokeDasharray"
      | "strokeDashoffset"
      | "strokeLinecap"
      | "strokeLinejoin"
      | "strokeMiterlimit"
      | "vectorEffect"
      | "clipRule"
      | "clipPath"
      | "translate"
      | "translateX"
      | "translateY"
      | "origin"
      | "originX"
      | "originY"
      | "scale"
      | "scaleX"
      | "scaleY"
      | "skew"
      | "skewX"
      | "skewY"
      | "rotation"
      | "x"
      | "y"
      | "transform"
      | "disabled"
      | "onPress"
      | "onPressIn"
      | "onPressOut"
      | "onLongPress"
      | "delayPressIn"
      | "delayPressOut"
      | "delayLongPress"
      | "marker"
      | "markerStart"
      | "markerMid"
      | "markerEnd"
      | "mask"
      | "filter"
      | "font"
      | "fontStyle"
      | "fontVariant"
      | "fontWeight"
      | "fontStretch"
      | "fontSize"
      | "fontFamily"
      | "textAnchor"
      | "textDecoration"
      | "letterSpacing"
      | "wordSpacing"
      | "kerning"
      | "fontFeatureSettings"
      | "fontVariantLigatures"
      | "fontVariationSettings"
    > & { readonly preserveAspectRatio?: string | undefined } & {}
) {
  return (
    <Svg width="16" height="16" viewBox="0 0 16 16" fill="none">
      <Path
        d="M6.54667 8H9.45333M15 9.66667V6.33333M1 9.66667V6.33333M11.4533 12C13.0533 12 13.4533 11.1 13.4533 10V6C13.4533 4.9 13.0533 4 11.4533 4C9.85333 4 9.45333 4.9 9.45333 6V10C9.45333 11.1 9.85333 12 11.4533 12ZM4.54667 12C2.94667 12 2.54667 11.1 2.54667 10V6C2.54667 4.9 2.94667 4 4.54667 4C6.14667 4 6.54667 4.9 6.54667 6V10C6.54667 11.1 6.14667 12 4.54667 12Z"
        stroke="white"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </Svg>
  );
}
